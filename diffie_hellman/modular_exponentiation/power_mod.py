""" (base^k) mod p """
def power_mod(base, k, p):
    k_bin = bin(k)[2:-1][::-1] # remove prefix, last bit and reversed binary
    total = base % p
    expand = total
    for bi_di in k_bin: # ignore first digit
        expand = (expand ** 2) % p
        if bi_di == "1":
            total = (total * expand) % p
    return total

""" 
# Test 10^6 bits ~ 3*10^5 decimal digits 
base = 98730819128552012141241213121231231121231231213131312312311014736088097732614545432320822107108978409756569223088340694496488528386680940312630524870509573864596988683988397282969818502346561622385318850857564689511911281398294930663536909262646442914356724220812950363186403175796883057217881745278116921231075006187327040445023356125339609999121
p = 43082051866405784268948008360239663371476383135695473540552891195307856350251150004363160861540864492690236763621355192274027092576551112340323465734825985622409182429611461053257718176197766147966093597607140010120892130855358598001143531843921797726275980046817650188458876441923529364987308191285520121412412131212312311212312312131313123123
from random import getrandbits
k = getrandbits(10**6)

res = power_mod(base, k, p)
print(res)
 """

